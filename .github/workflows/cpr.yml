name: Create Pull Request Example Command
on:
  push:
    branches: [ "main" ]
jobs:
  cpr_prod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Branch Name  # Create a variable to save current branch, cause my trigger branch is feature/**
        run: echo "branch-name=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV  

      - name: Checkout Repository  # Checkout to prod ( Base branch that need to be syncronized )
        uses: actions/checkout@v4
        with:
          ref: prod

      - name: Reset feature branch  # This is what solve the problem, instead of reseting the base branch (Dev) you need to reset tha target branch feature/something
        run: |
          git fetch origin ${{ env.branch-name }}:${{ env.branch-name }}
          git reset --hard ${{ env.branch-name }}

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          title: '[Sync] Auto PR to prod branch'
          commit-message: Syncronize changes on main to branch prod
          body: |
            Update info
            - merge main to prod
            - Auto-generated by Github Action
          labels: automated-pr
          draft: false
          base: prod
          branch: main
          branch-suffix: short-commit-hash
          delete-branch: true
      - name: Check output
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: merge
          
